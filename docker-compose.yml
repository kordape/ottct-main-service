version: '3.9'
networks:
  ottct-main-network:
    driver: bridge
services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    hostname: localstack
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal sqs list-queues
      interval: 5s
      timeout: 10s
      start_period: 10s
    ports:
      - 4566:4566
    environment:
      SERVICES: 'sqs'
      DOCKER_HOST: 'unix:///var/run/docker.sock'
      AWS_REGION: 'us-east-1'
      HOSTNAME_EXTERNAL: 'localstack'
      HOST_TMP_FOLDER: '/tmp/localstack'
    volumes:
      - "./init-scripts:/docker-entrypoint-initaws.d/"
      - "./.localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - ottct-main-network
  app:
    build: .
    container_name: app
    image: ottct-main-service:latest
    environment:
      DB_URL: 'postgres://postgres:tests@db:5432/ottct_main_service'
      SECRET_KEY: 's+76qrrI53tqP666lQla3t+pitXrAsYQQbEn/55JQKA='
      AWS_ENDPOINT_URL: 'http://localstack:4566'
      FAKE_NEWS_QUEUE_NAME: 'default-fake-news'
      AWS_REGION: 'us-east-1'
      AWS_PROFILE: 'user'
      AWS_ACCESS_KEY_ID: 'foobar'
      AWS_SECRET_ACCESS_KEY: 'foobar'
    ports:
      - 8080:8080
    networks:
      - ottct-main-network
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:13.3-alpine
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tests
    restart: on-failure
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    command:
      - /bin/sh
      - -c
      - |
        echo 'psql -v ON_ERROR_STOP=1 --username "$$POSTGRES_USER" -c "CREATE DATABASE ottct_main_service";' >> /docker-entrypoint-initdb.d/init.sh;
        docker-entrypoint.sh postgres
    networks:
      - ottct-main-network
